TODO

-Add port numbers to search table. Set up program so it can do testing over
localhost on different port numbers.


WINDOWS PORTABILITY

-New line not working in terminal. \r\n?

-Need to figure out CryptGenRandom for encryption::PRNG(). encryption::PRNG()
currently set to kill program on windows.
http://msdn.microsoft.com/en-us/library/aa379942.aspx

-Make diffie-hellman keys larger (1024bit). When connecting to a server have the
client send it's host key and then the server send it's host key. Both the
client and server should look to see if a key has been negotiated with the
other before. If it has the client can just start sending without negotating a
new key.


DEFERRED FEATURES

-Carefully examine client and server public interfaces.

-client::set_download_directory() not doing anything but saving setting.

-Support for multiple share directories.

-Total upload/download needs to be kept track of in client_server_bridge. Think
about having a minimum speed on the client/server upload/download (like 1kB/s).
If there's no minimum it could be possible for the client to starve the server
or vise versa. The sleep method in the socket checking loop won't work here
because it would allow writes to slow down reads and visa versa.

-Figure out how to handle naming conflicts. It should be fully automatic.
Probably just rename the files according to some rules. It doesn't matter too
much since the hashes stay the same.

-Combine hash tree's in to one file. Keep track of starting locations in DB.
Perhaps have a memmove type opteration one a file where hashes can be moved to
get rid of gaps due to removed files. The intermediate step of the memmove
operation would basically be a journal.


PROTOCOL IDEAS

-Have a token that can be send to the server from the client which basically asks
the server, "do you want to send data". Token should be offered once every 16
seconds so the server can send information like servers it knows about that the
client does not.


OVERLAY NETWORK IDEAS

-XOR key system where keys are organized by distance (distance measured in hops).

-Trackers which are organized in to a tree structure such that if the user adds
a tracker the user will also get to see the files of the trackers that tracker
trusts and the files that that tracker trusts etc. Have an option to limit trust
levels to direct trust only, one level inheritance and all level inheritance.
Children should be able to point to their parents.

-What about having one large overlay network reserved for tracker discovery.
Have a rule that says an individual can advertise a tracker once per day (or
some large time period). That'd make traffic on the large overlay very minimal.
