TODO


IDEAS
-Have a singleton to write to files. This singleton should have running threads
inside so client threads don't have to wait on I/O. The singleton should have a
max buffer size where clients get blocked.
Rationale: Be able to return socket_data to reactor ASAP so reactor can once
again monitor socket for incoming data. Without this TCP window would be maxed
out all the time.


DEFERRED FEATURES

-Generating prime PRNG needs to be fast PRNG, not /dev/urandom. That should only
be used to seed the fast PRNG. Miller-Rabin test count needs to be adjusted
according to how big the prime is. Fix this by updating to the mp_int library
when the next version is released in the boost vault.
-Using new primes must be forced. To do this old primes must be kept track of.
-Requests should be sent before file blocks, when two hosts download from
eachother the file blocks hog upload that should be used to get requests out.
-SQLite blob write offset is a signed int. This limits the maximum tree size
to 2gB. Create document like this: http://www.sqlite.org/limits.html with size
limits.
-Support for multiple share directories.
-Figure out how to handle naming conflicts. It should be fully automatic.
Probably just rename the files according to some rules. It doesn't matter too
much since the hashes stay the same.
-Have a tab that shows share stats, upload/download stats, duplicate files, etc.
-Make sure program works when out of hard drive space.
