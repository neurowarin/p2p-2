BUGS AND NECESSARY FEATURES


POSSIBLE FEATURES

-Client has no control of how many connections it will try to make. This
feature can be added once exploration is working.

-Add a check to make sure the client is not requesting the same blocks over
and over(trying to waste bandwidth to degrade serving capability).

-Have the serverIndex poll to check for new files added to share.


IDEAS

-When a server comes back online have it "announce" to people previously downloading
from it that it is back online. This will allow people to locate a server with a dynamic
IP also.

-Derive the download class from class X. Virtualize functions in class X. This 
will allow you to make other classes and derive them from class X which will 
allow downloading of different things and setting different buffer sizes.

-Overhead can be reduced a lot. The client doesn't need to know what file_ID
the server is sending because it tracks everything by the socket number. The
client also doesn't need to know the fileBlock because it can expect the server
to send the block that was requested. For that matter what the server is doing
"BLS" also doesn't need to be known.

-Locating files should be done on a tiered linear network. Hosts should connect to
eachother in a sequential way on level 1 but in other ways on the other levels to
make it so the client can start traversing the network on the level which is closest.

Tier 1: Linear
Tier 2: Random

Question: How would tier 1 remain connected at all times?
Question: How to insure roughly the same access time to any node?

