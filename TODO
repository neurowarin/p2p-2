TODO


DEFERRED FEATURES

-client::set_download_directory() not doing anything but saving setting.

-Hashes need to be removed for files that don't exist in share. Deferred because
it makes testing difficult.


IDEAS

-Don't allow clients to download who have the P2P port blocked. When a server is
connected to it should try to connect back to the client(more precisely the
server running at the address the client connected from). If the server can't
connect back it should deny the clients connection. This will make things
totally not work if there is NAT in the way or the server somehow isn't running.

-Let the user set up bandwidth profiles that can be quickly selected. The user
could create one for games/night time/bla bla. Then have a timer that can select
the profile based on time of day.

-Think about combining hash tree's in to one file. Keep track of starting
locations in DB. Perhaps have a memmove type opteration one a file where hashes
can be moved to get rid of gaps due to removed files. The intermediate step of
the memmove operation would basically be a journal.


OVERLAY NETWORK IDEAS

-XOR key system where keys are a hash of IP addresses so that nodes are
organized by distance (distance measured in hops). Can keys directly be IP
addresses since they are unique and organized by network?

-Trackers which are organized in to a tree structure such that if the user adds
a tracker the user will also get to see the files of the trackers that tracker
trusts and the files that that tracker trusts etc. Have an option to limit trust
levels to direct trust only, one level inheritance and all level inheritance.
Children should be able to point to their parents.

-What about having one large overlay network reserved for tracker discovery.
Have a rule that says an individual can advertise a tracker once per day (or
some large time period). That'd make traffic on the large overlay very minimal.
