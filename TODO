BUGS AND NECESSARY FEATURES

-client is not working with UNRELIABLE_CLIENT enabled.

-clientIndex code that resumes a download is broken.

-get rid of all for loops where items are being accessed by myVector.at(x), it's
horribly inefficient.

-If the download directory is missing and a download is started the directory
is not created and the RAM starts getting sucked up because nothing is getting
written to disk.

-gui::searchInfoRefresh() is not removing more than one entry per tick.

-clientIndex::initialFillBuffer() needs to be able to determine the starting
block count on downloads resumed on startup.

-There should be a check for the delimiter in the index files.
Filenames can have a delimiter in them and mess things up.

-Small packet size is wasting a lot of speed. Hypothesis is that the total time 
waiting between request of data and data transmission is greater the smaller
the packet size. 4096 = 1000kB/s vs 65535 = 2200kB/s.

-Client has no control of how many connections it will try to make.


POSSIBLE FEATURES

-Add a check to make sure the client is not requesting the same blocks over
and over(trying to waste bandwidth to degrate serving capability).

-Have the serverIndex poll to check for new files added to share.

-Come up with a indexing scheme for search.db(it'll get big).

-Reduce control data size by encoding file and fileBlock numbers. Also, perhaps
negotiate control data size for each download.

-There should be information in the gui statusbar for protocol overhead.


IDEAS


