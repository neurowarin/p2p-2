TODO

-P_ERROR on downloads not being handled. Need a way for downloads to trigger
disconnect of a server to solve this. Make singleton disconnect object the client
has access to. Have it buffer in memory servers to disconnect. Also give it
DB access to record blacklisted servers.

-Untemplate the convert class. Make it a namespace with templated functions.
Merge hex.h in to it. Make the endianness check a singleton.


DEFERRED FEATURES

-These have their preferences saved but the setting doesn't take effect.
	client::set_max_connections()
	server::set_max_connections()
	client::set_download_directory()
	server::set_share_directory()


IDEAS

-File location should be done with trackers which are organized in to a tree
structure such that if the user adds a tracker the user will also get to see
the files of the trackers that tracker trusts and the files that that tracker
trusts etc. Have an option to limit trust levels to direct trust only, one
level inheritance and all level inheritance. Children should be able to point
to their parents.

-Don't allow clients to download who have the P2P port blocked. When a server is
connected to it should try to connect back to the client(more precisely the
server running at the address the client connected from). If the server can't
connect back it should deny the clients connection. This will make things
totally not work if there is NAT in the way or the server somehow isn't running.

-Let the user set up bandwidth profiles that can be quickly selected. The user
could create one for games/night time/bla bla. Then have a timer that can select
the profile based on time of day.

-Think about combining hash tree's in to one file. Keep track of starting
locations in DB. Perhaps have a memmove type opteration one a file where hashes
can be moved to get rid of gaps due to removed files.

-Randomize the order in which sockets are checked to eliminate starvation when
rate limiting enabled. Is there a non-random shuffling that guarantees equal
time? What about associating a counter with each socket that counts the number
of turns it got?
