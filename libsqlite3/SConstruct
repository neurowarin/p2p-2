#std
import sys

Import('env_base')
env_sqlite = env_base.Clone()

if sys.platform == 'linux2':
	os_specific = '-'
if sys.platform == 'win32':
	os_specific = '/'

#compile as multithreaded http://www.sqlite.org/compile.html#threadsafe
#Setting =2 doesn't serialize all access, but requires locking such that
#no two threads use the same DB connection at the same time.
env_sqlite['CCFLAGS'].append(os_specific+'DSQLITE_THREADSAFE=2')

#enable full text search
env_sqlite['CCFLAGS'].append(os_specific+'DSQLITE_ENABLE_FTS3')
env_sqlite['CCFLAGS'].append(os_specific+'DSQLITE_ENABLE_FTS3_PARENTHESIS')

#remove libdl dependency by disabling dynamic module loading (not used anyways)
env_sqlite['CCFLAGS'].append(os_specific+'DSQLITE_OMIT_LOAD_EXTENSION');

env_sqlite.StaticLibrary('sqlite3.c')
env_sqlite.Program('sqlite3', ['shell.c'])
