#site_scons
import boost
import gtkmm
import system

SConscript([
	'#dep_graph/SConstruct',
	'#libsqlite3/SConstruct',
	'#libtommath/SConstruct',
	'#overlay_sim/SConstruct',
	'#site_scons/SConstruct',
	'#test_manager/SConstruct',
	'#unit_tests/SConstruct'
])

#source files for objects to be linked in to p2p_gui
src_gui = [
	'gui.cc',
	'gui_about.cc',
	'gui_download_status.cc',
	'gui_preferences.cc',
	'main_gui.cc'
]

#source files for objects to be linked in to p2p_nogui
src_nogui = [
	'main_nogui.cc'
]

#source files for objects to be linked in to p2p_gui and p2p_nogui
src_common = [
	'CLI_args.cc',
	'client_buffer.cc',
	'client.cc',
	'client_new_connection.cc',
	'client_server_bridge.cc',
	'CMWC4096.cc',
	'DB_blacklist.cc',
	'DB_client_preferences.cc',
	'DB_download.cc',
	'DB_hash_free.cc',
	'DB_prime.cc',
	'DB_search.cc',
	'DB_server_preferences.cc',
	'DB_share.cc',
	'download.cc',
	'download_factory.cc',
	'download_file.cc',
	'download_hash_tree.cc',
	'download_tracker.cc',
	'encryption.cc',
	'hash_tree.cc',
	'http.cc',
	'number_generator.cc',
	'request_generator.cc',
	'server_buffer.cc',
	'server.cc',
	'server_index.cc',
	'sha.cc',
	'slot.cc',
	'slot_file.cc',
	'slot_hash_tree.cc',
	'speed_calculator.cc',
	'thread_pool.cc'
]

env = Environment()
system.env_setup(env)
boost.env_setup(env)
env_gui = env.Clone()
gtkmm.env_setup(env_gui)

static_libs = [
	boost.static_lib('filesystem'),
	boost.static_lib('system'),
	boost.static_lib('thread')
]

print 'building with',env.GetOption('num_jobs'),'threads'

#compile different object groups
src_gui_obj = env_gui.Object(src_gui)
src_nogui_obj = env.Object(src_nogui)
src_common_obj = env.Object(src_common)

#link
env_gui.Program('p2p_gui', src_gui_obj + src_common_obj + static_libs)
env.Program('p2p_nogui', src_nogui_obj + src_common_obj + static_libs)
