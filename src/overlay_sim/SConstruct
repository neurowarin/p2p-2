import glob
import fnmatch
import os
import sys

##BEGIN FUNCTIONS
#search files in list of directories, return path to static library
def lib_path(LIBDIR, pattern):
	#set up suffix to append to pattern
	if sys.platform == 'win32':
		pattern += '.lib'
	if sys.platform == 'linux2':
		pattern += '.a'

	#search directories for file name matching pattern
	for dir in LIBDIR:
		if dir[0] != '#': #don't search directories within source tree
			for file in os.listdir(dir):
				if fnmatch.fnmatch(file, pattern):
					return dir + "/" + file

	print 'error: cannot find library with pattern "' + pattern
	exit(1)
##END FUNCTIONS

env_base = Environment(
	CPPPATH = [],
	LIBS = []
)

if sys.platform == 'linux2':
	env_base['CPPPATH'].append('/usr/local/include/boost-1_36')
	env_base['LIBS'].append('pthread')
	LIBDIR = ['/usr/local/lib']
	#Command('sim.ps', 'sim', 'sim |dot -Tps -o sim.ps')

static_libs = [
	lib_path(LIBDIR, 'libboost_thread*')
]

env_base.Program('sim', glob.glob('*.cc') + static_libs, LIBPATH = LIBDIR)
